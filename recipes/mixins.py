from django.db.models import Q
from django.shortcuts import redirect

from .models import Recipe, Tag


class RecipeMixin:
    """
    A mixin for handling recipe-related views.

    Attributes:
    - model (Django Model): Specifies the model used for the recipe (default: Recipe).
    - paginate_by (int): Determines the number of items per page for pagination (default: 6).
    """

    model = Recipe
    paginate_by = 6

    def get_context_data(self, **kwargs):
        """
        Adds context data to the view.

        Sets the current page to 'recipe' and includes filters in the context.

        :return: Context data for the view.
        :rtype: dict
        """

        context = super().get_context_data(**kwargs)
        context["current_page"] = "recipe"
        filters = self.request.GET.getlist(
            "filters", Tag.TAGS
        )
        context["filters"] = "&" + "&".join([f"filters={f}" for f in filters])
        return context

    def get_queryset(self):
        """
        Adjusts the queryset based on the filters provided in the request's GET parameters.

        Filters the queryset according to the specified tags.

        :return: Adjusted queryset based on filters.
        :rtype: QuerySet
        """
        queryset = super().get_queryset()
        query_filters = self.request.GET.getlist("filters", Tag.TAGS)

        if len(query_filters) == 1:
            f = dict.fromkeys(query_filters, True)
            return queryset.filter(**f)

        if len(query_filters) == 2:
            f1 = dict.fromkeys([query_filters[0]], True)
            f2 = dict.fromkeys([query_filters[1]], True)
            return queryset.filter(Q(**f1) | Q(**f2))

        return queryset


class IsAuthorMixin:
    """
    A mixin to check if the user is the author of a recipe.

    Redirects the user to the recipe detail page if not the author.

    Usage: Apply this mixin to views requiring authorization based on recipe authorship.
    """
    def dispatch(self, request, *args, **kwargs):
        """
        Checks if the requesting user is the author of the recipe.
        Redirects to the recipe detail page if not the author.

        :param request: HttpRequest object generated by Django.
        :type request: HttpRequest
        :param args: Positional arguments.
        :param kwargs: Keyword arguments.
        :return: View or redirection to the recipe detail page.
        """
        if request.user != self.get_object().author:
            return redirect(
                "recipe_detail", kwargs.get("username"), kwargs.get("slug")
            )
        return super().dispatch(request, *args, **kwargs)
